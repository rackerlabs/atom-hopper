
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.atomhopper</groupId>
        <artifactId>parent</artifactId>
        <version>1.2.35-SNAPSHOT</version>
    </parent>

    <groupId>org.atomhopper</groupId>
    <artifactId>atomhopper</artifactId>
    <packaging>war</packaging>

    <name>ATOM Hopper - AtomHopper-WAR-RPM-DEB</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.atomhopper</groupId>
            <artifactId>core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atomhopper.adapter</groupId>
            <artifactId>hibernate-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atomhopper.adapter</groupId>
            <artifactId>mongodb-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atomhopper.adapter</groupId>
            <artifactId>postgres-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atomhopper.adapter</groupId>
            <artifactId>migration-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atomhopper.adapter</groupId>
            <artifactId>jdbc-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <dependency>
            <groupId>me.moocar</groupId>
            <artifactId>logback-gelf</artifactId>
        </dependency>

        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-servlet</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>atomhopper-${project.version}</finalName>
    </build>

    <profiles>
        <!--
            By default we turn off this plugin to make builds faster - however,
            if you want to build the RPM simply run maven with
            the following option, '-P build-rpm'

            Example: mvn -P build-rpm clean install
        -->
        <profile>
            <id>build-rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <failOnMissingWebXml>true</failOnMissingWebXml>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${endorsed.dir}</outputDirectory>
                                    <silent>true</silent>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>javax</groupId>
                                            <artifactId>javaee-endorsed-api</artifactId>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.1-alpha-1</version>
                        <executions>
                            <execution>
                                <id>Build RPM</id>
                                <goals>
                                    <goal>attached-rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <copyright>Apache License, Version 2.0</copyright>
                            <group>Applications/Communications</group>
                            <packager>Rackspace - Cloud Integration Team</packager>
                            <description>ATOM Hopper - The ATOMPub Java Server</description>
                            <release>1</release>
                            <mappings>
                                <mapping>
                                    <directory>/etc/atomhopper</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>644</filemode>
                                    <configuration>noreplace</configuration>
                                    <directoryIncluded>true</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/resources/META-INF/atom-server.cfg.xml</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/etc/atomhopper</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>644</filemode>
                                    <configuration>noreplace</configuration>
                                    <directoryIncluded>true</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/webapp/META-INF/application-context.xml</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/etc/atomhopper</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>644</filemode>
                                    <configuration>noreplace</configuration>
                                    <directoryIncluded>true</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/webapp/META-INF/template-logback.xml</location>
                                            <destination>logback.xml</destination>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <!--
                                        Use this path for Tomcat6
                                        <directory>/var/lib/tomcat6/webapps/</directory>
                                    -->
                                    <!--
                                        This path is for our custom Tomcat7 RPM since
                                        an official Tomcat7 RPM doesn't exist yet for CentOS
                                    -->
                                    <directory>/srv/tomcat/webapps</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>644</filemode>
                                    <directoryIncluded>false</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>target/atomhopper-${project.version}.war</location>
                                            <!--
                                                If you already have a ROOT.war and wish to keeo it
                                                then remove the following destination completely
                                            -->
                                            <destination>ATOMHOPPER.war</destination>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/opt/atomhopper</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>755</filemode>
                                    <configuration>false</configuration>
                                    <directoryIncluded>true</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/webapp/META-INF/PlaceholderForAtomHopperH2Files</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/var/log/atomhopper</directory>
                                    <username>tomcat</username>
                                    <groupname>tomcat</groupname>
                                    <!-- Modify file permissions as needed -->
                                    <filemode>755</filemode>
                                    <configuration>false</configuration>
                                    <directoryIncluded>true</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/webapp/META-INF/PlaceholderForAtomHopperLogFiles</location>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                            <postinstallScriptlet>
                                <script>touch "/srv/tomcat/webapps/ATOMHOPPER.war"</script>
                            </postinstallScriptlet>
                            <!--  
                                 First of all, <postremoveScriptlet> does not seem to take
                                 multiple <script> elements. It only takes the last one.
                                 Seconnd, the last <script> broke rpm -e, so we are unable
                                 to remove old packages. 
                                 Third, I don't see why we need to remove these directories.
                                 I think we should keep /var/log/atomhopper. The /opt/atomhopper
                                 does not exist
                            <postremoveScriptlet>
                                <script>rm -rf "/opt/atomhopper/"</script>
                                <script>rm -rf "/var/log/atomhopper/"</script>
                                <script>rm -rf "/srv/tomcat7/webapps/ROOT/"</script>
                            </postremoveScriptlet>
                            -->
                            <requires>
                                <!--
                                    Use this for Tomcat6
                                    <require>tomcat6</require>
                                -->
                                <!--
                                    This path is for our custom Tomcat7 RPM since
                                    an official Tomcat7 RPM doesn't exist yet for CentOS
                                -->
                                <require>tomcat7</require>
                                <!--
                                    You can modify this to use the Oracle Java JDK 1.6 or Open JDK
                                    if you want
                                 -->
                                <!--
                                <require>jdk</require>
                                -->
                            </requires>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!--
            By default we turn off this plugin to make builds faster - however,
            if you want to build the DEB package simply run maven with
            the following option, '-P build-deb'

            Example: mvn -P build-deb clean install
        -->
        <profile>
            <id>build-deb</id>

            <build>
                <plugins>

                    <plugin>
                        <groupId>org.vafer</groupId>
                        <artifactId>jdeb</artifactId>
                        <version>0.8</version>

                        <executions>
                            <execution>
                                <phase>package</phase>

                                <goals>
                                    <goal>jdeb</goal>
                                </goals>

                                <configuration>
                                    <dataSet>
                                        <!-- The war file -->
                                        <data>
                                            <src>target/atomhopper-${project.version}.war</src>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/var/lib/tomcat6/webapps</prefix>
                                                <user>tomcat6</user>
                                                <filemode>755</filemode>
                                            </mapper>
                                        </data>

                                        <!-- The config directory and files -->
                                        <data>
                                            <src>src/main/resources/META-INF</src>
                                            <type>directory</type>
                                            <includes>atom-server.cfg.xml</includes>

                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/atomhopper</prefix>
                                                <user>tomcat6</user>
                                                <!-- Modify file permissions as needed -->
                                                <filemode>755</filemode>
                                            </mapper>
                                        </data>

                                        <data>
                                            <src>src/main/resources/META-INF</src>
                                            <type>directory</type>
                                            <includes>placeholder-for-h2-db</includes>

                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/opt/atomhopper</prefix>
                                                <user>tomcat6</user>
                                                <!-- Modify file permissions as needed -->
                                                <filemode>755</filemode>
                                            </mapper>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>upload-veracode-static-scan</id>
            <dependencies>
                <dependency>
                    <groupId>com.rackspace.api.clients</groupId>
                    <artifactId>veracode-client</artifactId>
                    <version>1.3</version>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy.modules.http-builder</groupId>
                    <artifactId>http-builder</artifactId>
                    <version>0.7</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                    <version>4.5.13</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcore</artifactId>
                    <version>4.4.11</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>1.3</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        import com.rackspace.api.clients.veracode.DefaultVeracodeApiClient
                                        import groovy.util.AntBuilder
                                        import groovyx.net.http.HTTPBuilder
                                        import static groovyx.net.http.ContentType.*
                                        import static groovyx.net.http.Method.*
    
                                        // some globals used throughout the script
                                        def veracodeUrl = 'https://analysiscenter.veracode.com/api/'
                                        def platform = 'Linux'
                                        def client = new DefaultVeracodeApiClient(veracodeUrl, '${veracode.username}',
                                                                                  '${veracode.password}', System.out)
                                        def version = project.version
    
                                        // scanName is the version (minus -SNAPSHOT) and build number.
                                        // an example would be: 1.11.0-1
                                        def scanName = version - '-SNAPSHOT' + '-' + '${build.number}'
                                        println "Submitting scan for artifacts with name: " + scanName
    
                                        // get the application ID
                                        // the application must be pre-created from Veracode web UI
                                        def appId =  client.getAppId("Atom Hopper")
                                        println "For applicationId: " + appId
                                        println ""

                                        def http = new HTTPBuilder(veracodeUrl)
                                        http.auth.basic '${veracode.username}', '${veracode.password}'
    
                                        // Step 1 - create a new scan
                                        println "Creating a scan build /api/4.0/createbuild.do"
                                        def result = http.request(POST) {
                                            uri.path = '4.0/createbuild.do'
                                            uri.query = ['app_id': appId, 'version': scanName, 'platform': platform]
                                            response.success = { resp -&gt;
                                                println 'createbuild.do completed successfully (status=${resp.status}): '
                                                println resp.entity.content.text
                                            }
                                            response.failure = { resp -&gt;
                                                println 'createbuild.do failed (status=${resp.status}), reason:'
                                                println resp.entity.content.text
                                            }
                                        }

                                        // Step 2 - upload the file to scan
                                        // Note: I could not make the MultipartEntity to work with
                                        // HttpBuilder class. So I resorted to calling curl
                                        println "Uploading file ${project.basedir}/target/atomhopper-${project.version}.war to /api/4.0/uploadfile.do"
                                        def uploadCurl = ["curl", "--compressed",
                                                          "-u", "${veracode.username}:${veracode.password}",
                                                          "-F", "app_id=${appId}",
                                                          "-F", "file=@${project.basedir}/target/atomhopper-${project.version}.war",
                                                          "-F", "save_as=atomhopper.war",
                                                          "${veracodeUrl}4.0/uploadfile.do"]
                                        def proc = uploadCurl.execute()
                                        Thread.start { System.err &lt;&lt; proc.err }
                                        proc.waitFor()
    
                                        // Step 3 - submit the prescan with auto_scan=true
                                        // prescan takes a few minutes, the actual scan will
                                        // be kicked off automatically after prescan is done
                                        println "Submitting /api/4.0/beginprescan.do"
                                        http.request(GET) {
                                            uri.path = '4.0/beginprescan.do'
                                            uri.query = ['app_id': appId, 'auto_scan': true]
                                            response.success = { resp -&gt;
                                                println 'prescan sent successfully (status=${resp.status}):'
                                                println resp.entity.content.text
                                            }
                                            response.failure = { resp -&gt;
                                                println 'prescan failed (status=${resp.status}), reason:'
                                                println resp.entity.content.text
                                            }
                                        }
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
